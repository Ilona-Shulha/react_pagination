{"version":3,"sources":["components/Pagination.tsx","components/Page.tsx","components/ShortPagePagination.tsx","App.tsx","index.tsx"],"names":["Pagination","React","memo","total","page","perPage","withInfo","updateSearch","useState","pagesQty","setPagesQty","initialNum","setInitialNum","useSearchParams","setSearchParams","changeInitialNum","step","prevValue","useEffect","pagesArr","i","push","length","getPagesQty","className","hidden","type","classNames","onClick","map","el","to","num","pathname","search","Math","floor","name","id","value","onChange","e","target","Page","location","useLocation","useParams","ShortPagePagination","getPath","App","totalPage","shortView","searchParams","currentPage","get","params","Object","entries","forEach","key","set","path","index","element","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a285f9b.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\n\nimport './Pagination.css';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  page: number,\n  withInfo?: boolean,\n  updateSearch: (params: { [key: string]: string }) => void,\n};\n\nexport const Pagination: React.FC<Props> = React.memo(({\n  total, page, perPage, withInfo, updateSearch,\n}) => {\n  const [pagesQty, setPagesQty] = useState([1]);\n  const [initialNum, setInitialNum] = useState(1);\n  const [, setSearchParams] = useSearchParams();\n\n  const getPagesQty:() => void = () => {\n    const pagesArr = [];\n\n    for (let i = 1; i <= total; i += 1) {\n      pagesArr.push(i);\n    }\n\n    if (pagesArr.length > 0) {\n      setPagesQty(pagesArr);\n    }\n  };\n\n  const changeInitialNum:(step:number) => void = (step) => {\n    if (step < 0) {\n      setInitialNum((prevValue) => {\n        return (prevValue + step >= 1)\n          ? prevValue + step\n          : 1;\n      });\n    } else {\n      setInitialNum((prevValue) => {\n        return (prevValue + step <= total - perPage + 1)\n          ? prevValue + step\n          : total - perPage + 1;\n      });\n    }\n  };\n\n  const getPath = (num: number) => {\n    return { pathname: `/${num}`, search: `?page=${num}&perPage=${perPage}` };\n  };\n\n  useEffect(() => {\n    getPagesQty();\n  }, [total]);\n\n  return (\n    <nav className=\"pagePagination\">\n      <p\n        className=\"pagePagination__with-info\"\n        hidden={!withInfo}\n      >\n        {`${initialNum} - ${initialNum - 1 + perPage} of ${total}`}\n      </p>\n      <ul className=\"pagePagination__list\">\n        <li\n          className=\"pagePagination__item\"\n        >\n          <button\n            type=\"button\"\n            className={classNames(\n              'pagePagination__link', {\n                'pagePagination__link--passive': initialNum === 1,\n              },\n            )}\n            onClick={() => changeInitialNum(0 - perPage)}\n          >\n            <span>&laquo;</span>\n          </button>\n        </li>\n        {pagesQty.map(el => (\n          <li\n            className=\"pagePagination__item\"\n            key={el}\n            hidden={el < initialNum || el >= initialNum + perPage}\n          >\n            <Link\n              className={classNames(\n                'pagePagination__link', {\n                  'pagePagination__link--current': el === page,\n                },\n              )}\n              to={getPath(el)}\n              onClick={() => {\n                updateSearch({ page: `${el}` });\n                if ((initialNum + perPage - el) <= 1) {\n                  changeInitialNum(Math.floor(perPage / 2));\n                }\n\n                if ((initialNum + perPage - el) >= perPage) {\n                  changeInitialNum(-Math.floor(perPage / 2));\n                }\n              }}\n            >\n              {el}\n            </Link>\n          </li>\n        ))}\n        <li\n          className=\"pagePagination__item\"\n        >\n          <button\n            type=\"button\"\n            className={classNames(\n              'pagePagination__link', {\n                'pagePagination__link--passive': (\n                  initialNum + perPage > total\n                ),\n              },\n            )}\n            onClick={() => changeInitialNum(perPage)}\n          >\n            <span>&raquo;</span>\n          </button>\n        </li>\n      </ul>\n      <select\n        name=\"selectPerPage\"\n        id=\"selectPerPage\"\n        className=\"pagePagination__select-perPage\"\n        value={perPage}\n        onChange={(e) => {\n          updateSearch({ perPage: e.target.value });\n          setSearchParams({ perPage: e.target.value, page: `${page}` });\n        }}\n      >\n        <option value=\"3\">3</option>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n      </select>\n    </nav>\n  );\n});\n","import { useLocation, useParams } from 'react-router-dom';\n\nexport const Page: React.FC = () => {\n  const location = useLocation();\n  const { page } = useParams();\n\n  return (\n    <div className=\"Page\">\n      <h2>{`Page number: ${page}`}</h2>\n      <p>{`queryParams: ${location.search}`}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\n\nimport './ShortPagePagination.css';\n\ntype Props = {\n  total: number,\n  page: number,\n  perPage: number,\n  updateSearch: (params: { [key: string]: string }) => void,\n};\n\nexport const ShortPagePagination: React.FC<Props> = React.memo(({\n  total, page, perPage, updateSearch,\n}) => {\n  const getPath = (num: number) => {\n    return { pathname: `/${num}`, search: `?page=${num}&perPage=${perPage}` };\n  };\n\n  return (\n    <nav className=\"shortPagePagination\">\n      <ul className=\"shortPagePagination__list\">\n        <li\n          className=\"shortPagePagination__item\"\n        >\n          <Link\n            className={classNames(\n              'shortPagePagination__link', {\n                'shortPagePagination__link--passive': (\n                  page === 1\n                ),\n              },\n            )}\n            to={getPath(page - 1)}\n            onClick={() => updateSearch({ page: `${page - 1}` })}\n          >\n            <span>&lt;</span>\n          </Link>\n        </li>\n        <li\n          className=\"shortPagePagination__item\"\n          hidden={page < 3}\n        >\n          <Link\n            className=\"shortPagePagination__link\"\n            to={getPath(1)}\n            onClick={() => updateSearch({ page: '1' })}\n          >\n            1\n          </Link>\n        </li>\n        <span\n          hidden={page < 3}\n          className=\"shortPagePagination__span\"\n        >\n          . . .\n        </span>\n        <li\n          className=\"shortPagePagination__item\"\n          hidden={page === 1}\n        >\n          <Link\n            to={getPath(page - 1)}\n            className=\"shortPagePagination__link\"\n            onClick={() => updateSearch({ page: `${page - 1}` })}\n          >\n            {page - 1}\n          </Link>\n        </li>\n        <li\n          className=\"shortPagePagination__item\"\n        >\n          <span\n            className={'shortPagePagination__link'\n              + ' shortPagePagination__link--current'}\n          >\n            {`[ ${page} ]`}\n          </span>\n        </li>\n        <li\n          className=\"shortPagePagination__item\"\n          hidden={page === total}\n        >\n          <Link\n            className=\"shortPagePagination__link\"\n            to={getPath(page + 1)}\n            onClick={() => {\n              updateSearch({ page: `${page + 1}` });\n            }}\n          >\n            {page + 1}\n          </Link>\n        </li>\n        <span\n          hidden={page + 1 >= total}\n          className=\"shortPagePagination__span\"\n        >\n          . . .\n        </span>\n        <li\n          className=\"shortPagePagination__item\"\n          hidden={page + 1 >= total}\n        >\n          <Link\n            className=\"shortPagePagination__link\"\n            to={getPath(total)}\n            onClick={() => updateSearch({ page: `${total}` })}\n          >\n            {total}\n          </Link>\n        </li>\n        <li\n          className=\"shortPagePagination__item\"\n        >\n          <Link\n            className={classNames(\n              'shortPagePagination__link', {\n                'shortPagePagination__link--passive': (\n                  page === total\n                ),\n              },\n            )}\n            to={getPath(page + 1)}\n            onClick={() => updateSearch({ page: `${page + 1}` })}\n          >\n            <span>&gt;</span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n});\n","import React, { useState } from 'react';\nimport {\n  Routes, Route, Navigate, useSearchParams,\n} from 'react-router-dom';\nimport { Pagination } from './components/Pagination';\nimport { Page } from './components/Page';\nimport { ShortPagePagination } from './components/ShortPagePagination';\n\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [totalPage] = useState(42);\n  const [withInfo] = useState(true);\n  const [shortView] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const currentPage = searchParams.get('page') || '1';\n  const perPage = searchParams.get('perPage') || '5';\n\n  const updateSearch = (params: { [key: string]: string }) => {\n    Object.entries(params).forEach(([key, value]) => {\n      searchParams.set(key, value);\n    });\n  };\n\n  return (\n    <>\n      <h1>Pagination</h1>\n      <Routes>\n        <Route path=\"/\">\n          <Route index element={<Navigate to={`/${currentPage}`} replace />} />\n          <Route path=\":page\" element={<Page />} />\n        </Route>\n      </Routes>\n      {shortView ? (\n        <ShortPagePagination\n          total={totalPage}\n          page={+currentPage}\n          updateSearch={updateSearch}\n          perPage={+perPage}\n        />\n      )\n        : (\n          <Pagination\n            total={totalPage}\n            perPage={+perPage}\n            page={+currentPage}\n            withInfo={withInfo}\n            updateSearch={updateSearch}\n          />\n        )}\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>, document.getElementById('root'),\n);\n"],"sourceRoot":""}